{"version":3,"sources":["styles/colors.js","Components/ColorBox.jsx","Components/FormTask.jsx","Components/Task.jsx","App.jsx","index.js"],"names":["allColors","mainColor","colors","LabelColor","styled","label","color","InputRadio","input","ColorBox","handleChangeColor","isChecked","defaultChecked","id","name","onChange","type","htmlFor","Input","Button","button","ColorsContainer","div","FormTask","handleSubmit","colorSelected","onSubmit","map","TaskContainer","TaskButton","TaskText","p","done","Task","title","handleCompleteTask","handleDeleteTask","onClick","GlobalSyle","createGlobalStyle","App","state","tasks","e","preventDefault","target","value","trim","createNewTask","newTask","allTask","setState","getTask","find","task","currentTasks","index","indexOf","filter","this","length","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.585e4555.chunk.js","sourcesContent":["const allColors = {\r\n    mainColor: '#387EF5',\r\n    colors: [\r\n        '#5D576B',\r\n        '#33C4FF',\r\n        '#FF3333',\r\n        '#DA33FF'\r\n    ]\r\n}\r\n\r\nexport default allColors","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LabelColor = styled.label`\r\n  display:inline-block;\r\n  width:30px;\r\n  height:30px;\r\n  margin-top:.5rem;\r\n  background-color:${({color})=> color};\r\n  border-radius:5px;\r\n`\r\n\r\nconst InputRadio = styled.input`\r\n  display:none;\r\n  &:checked + label{\r\n    border:1px solid white;\r\n  }\r\n`\r\n\r\nconst ColorBox = ({color, handleChangeColor, isChecked}) => (\r\n  <>\r\n    <InputRadio\r\n      defaultChecked={isChecked} \r\n      id={color}\r\n      name=\"color\"\r\n      onChange={()=>handleChangeColor(color)}\r\n      type=\"radio\" \r\n    />\r\n    <LabelColor htmlFor={color} color={color} />\r\n  </>\r\n)\r\n\r\nexport default ColorBox","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport allColors from '../styles/colors';\r\nimport ColorBox from './ColorBox';\r\nimport {generate as id} from 'shortid';\r\n\r\nconst Input = styled.input`\r\n    border:none;\r\n    border-bottom:1px solid ${allColors.mainColor};\r\n    background: none;\r\n    outline:none;\r\n    color:${allColors.mainColor};\r\n    width:22%;\r\n`\r\n\r\nconst Button = styled.button`\r\n    background-color:transparent;\r\n    border:1px solid ${allColors.mainColor};\r\n    border-radius:5px;\r\n    color:${allColors.mainColor};\r\n    padding:.3rem .5rem;\r\n    cursor:pointer;\r\n    outline:none;\r\n    margin-top:.8rem;\r\n\r\n    &:hover {\r\n      background-color:${ allColors.mainColor };\r\n      color: #fff;\r\n    }\r\n`\r\n\r\nconst ColorsContainer = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    width:10rem;\r\n    /* hay que poner el with a 150px */\r\n    margin:0 auto .5rem;\r\n`\r\n\r\nconst FormTask = ({ handleChangeColor, handleSubmit, colorSelected }) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <Input type=\"text\" name=\"title\"/>\r\n    <ColorsContainer>\r\n      {\r\n        allColors.colors.map( color =>(\r\n          <ColorBox \r\n            color={color} \r\n            handleChangeColor={handleChangeColor} \r\n            key={id()}\r\n            isChecked={colorSelected === color}\r\n          />\r\n        ))\r\n      }\r\n    </ColorsContainer>\r\n    <Button>Add Task</Button>\r\n  </form>\r\n)\r\n\r\nexport default FormTask","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TaskContainer = styled.div`\r\n  display:grid;\r\n  grid-template-columns:30px 1fr 50px;\r\n  justify-items:start;\r\n  align-items:center;\r\n  padding:0 1rem;\r\n  background-color: ${({color})=>color};\r\n  width:100%;\r\n  max-width:250px;\r\n  margin: 1rem auto;\r\n  border-radius:5px;\r\n`\r\n\r\nconst TaskButton = styled.button`\r\n  font-size: .8rem;\r\n  background-color:transparent;\r\n  border:1px solid white;\r\n  color:#fff;\r\n  padding: .3rem .5rem;\r\n  border-radius:10px;\r\n  cursor:pointer;\r\n  outline:none;\r\n\r\n  &:hover {\r\n    background-color:#fff;\r\n    color:#222;\r\n  }\r\n`\r\n\r\nconst TaskText = styled.p`\r\n    color:#fff;\r\n    text-decoration:${({ done }) => done ? 'line-through' : 'none'};\r\n`\r\n\r\nconst Task = ({ color, title, done, handleCompleteTask, handleDeleteTask }) => (\r\n  <TaskContainer color={color} >\r\n    <input \r\n      type=\"checkbox\"\r\n      onChange={handleCompleteTask}\r\n      defaultChecked={done} \r\n    />\r\n    <TaskText done={done} >{title}</TaskText>\r\n    <TaskButton onClick={handleDeleteTask} >Delete</TaskButton>\r\n  </TaskContainer>\r\n)\r\n\r\nexport default Task","import React, { Component } from 'react'\nimport { createGlobalStyle } from 'styled-components'\n\nimport allColors from './styles/colors'\n\nimport {generate as id} from 'shortid';\nimport FormTask from './Components/FormTask';\nimport Task from './Components/Task';\n\nconst GlobalSyle = createGlobalStyle`\n    body{\n        font-family:sans-serif;\n        background-color: #222;\n        color:${allColors.mainColor};\n        text-align: center;\n        margin:0;\n    }\n`\n\nclass App extends Component {\n\n    state = {\n        colorSelected: allColors.colors[0],\n        tasks: [\n            {\n                title:'Aprender React',\n                color: allColors.colors[0],\n                done:false\n            }\n        ]\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if(e.target.title.value.trim() !== ''){\n            this.createNewTask(e.target.title.value)\n            e.target.title.value = ``\n        }\n    }\n\n    createNewTask = (title) => {\n        const newTask = {\n            id:id(),\n            title,\n            color:this.state.colorSelected,\n            done:false\n        }\n\n        const allTask = [...this.state.tasks, newTask];\n\n        this.setState({tasks: allTask});\n    }\n\n    getTask = (id) => {\n        const task = this.state.tasks.find(task => task.id === id)\n        return task\n    }\n\n    handleCompleteTask = (id) => {\n        const currentTasks = this.state.tasks\n        const task = this.getTask(id)\n        const index = currentTasks.indexOf(task)\n\n        currentTasks[index].done = !currentTasks[index].done\n\n        this.setState({ tasks: currentTasks })\n    }\n\n    handleDeleteTask = (id) => {\n        let currentTasks = this.state.tasks\n        currentTasks = currentTasks.filter(task => task.id !== id)\n\n        this.setState({tasks: currentTasks});\n    }\n\n    handleChangeColor = (color) => {\n        this.setState({ colorSelected: color })\n    }\n\n    render() {\n        const { colorSelected, tasks } = this.state\n\n        return (\n            <>\n                <GlobalSyle />\n                <h1>To do list</h1>\n                <FormTask \n                    handleChangeColor={this.handleChangeColor}\n                    handleSubmit={this.handleSubmit}\n                    colorSelected={colorSelected}\n                />\n                {this.state.tasks.length === 0 && <h3>No tasks yet</h3>}\n                <div>\n                    {\n                        tasks.map(task => (\n                            <Task\n                                color={task.color}\n                                done={task.done}\n                                key={id()}\n                                title={task.title}\n                                handleCompleteTask={() => this.handleCompleteTask(task.id)}\n                                handleDeleteTask={()=> this.handleDeleteTask(task.id)}\n                            />\n                        ))\n                    }\n                </div>\n            </>\n\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}